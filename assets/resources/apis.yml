apis:
  - name: SpatialOS
    description: |
      SpatialOS is a computation platform from Improbable that allows you to exceed the power of a single game engine or server.
    documentation: https://docs.improbable.io/reference/12.0
    prizes: Use of SpatialOS is eligible for the Improbable Challenge Prize, details of which will be up shortly!
    rows: four half

  - name: Microsoft Cognitive — Vision, Speech, Search, Language, Knowledge 
    description: |
      Microsoft Cognitive Services (formerly Project Oxford) are a set of APIs, SDKs and services available to developers to make their applications more intelligent,
      engaging and discoverable. Microsoft Cognitive Services expands on Microsoft’s evolving portfolio of machine learning APIs and enables developers to easily add
      intelligent features—such as emotion and video detection; facial, speech and vision recognition; and speech and language understanding—into their
      applications. Our vision is for more personal computing experiences and enhanced productivity aided by systems that increasingly can see, hear, speak, understand
      and even begin to reason. You will find documentation of each product and their corresponding API references on the left navigation table.
    documentation: https://www.microsoft.com/cognitive-services/en-us/documentation
    prizes: Use of this API is eligible for the Microsoft Cognitive Services and Bot Framework Prize!
    rows: eight half

  - name: Microsoft Bot Framework
    description: |
      Build and connect intelligent bots to interact with your users naturally wherever they are—from your website or app to text/SMS, Skype, Slack, Facebook Messenger, 
      Office 365 mail, Teams and other popular services. 
    documentation: https://docs.botframework.com/en-us/
    prizes: Use of this API is eligible for the Microsoft Cognitive Services and Bot Framework Prize!
    rows: five

  - name: Man AHL Arctic
    description: |
      Man AHL are a leading quantitative investment manager in the UK and a pioneer in systematic trading for over 25 years. Their
      Arctic API provides a high performance datastore for time series and tick data.
    documentation: https://github.com/manahl/arctic
    rows: four

  - name: TPP Example Public Health Data
    description: |
      At TPP we have to interact with lots of different healthcare providers around the globe and we have to deal with a lot of data (6660 NHS organisations in the UK).
      We need to be able to handle data in all sorts of formats and as efficiently as possible.
      We’re providing an example set of patient data in the FHIR format for the Hack.
      FHIR stands for ‘Fast Healthcare Interoperability Resources’.
      It is a global standard for exchanging healthcare information electronically.
      It has both its advantages and its drawbacks, and is something we work with at TPP.
      There are plenty of things you could do with this data.
    extraDescription: |
      <ul><h6>Examples</h6>
        <li>You could create a tool to analyse a full set of patient information to identify trends and predict outcomes/treatments.</li>
        <li>Patients are getting more and more involved with their own healthcare. They may want a frontend to display their information, it could make suggestions to improve their health.</li>
        <li>You’ll also see that this format is still quite bloated. We have to deal with a large amount of patient data every second (12,850 patient record retrievals a minute).
          Maybe you could come up with a way to store this information more efficiently.</li>
      </ul>
      <ul><h6>Links which may help you get started</h6>
        <li><a rel='external' href='https://www.hl7.org/fhir/'>Main site</a></li>
        <li><a rel='external' href='http://hapifhir.io/'>Java</a></li>
        <li><a rel='external' href='https://github.com/ewoutkramer/fhir-net-api'>C#</a></li>
      </ul>
    documentation: https://www.hl7.org/fhir/
    rows: twelve

  - name: ARK API
    description: |
      Flexible and easy-to-use API to talk to the blockchain ecosystem.
    documentation: https://github.com/arkecosystem/
    rows: three

  - name: ARK Contract Execution Services 
    description: |
      Bridging two separate blockchains together and achieving true interoperability between ecosystems.
    documentation: https://github.com/arkecosystem/
    rows: three half

  - name: ARK — Click-Deployable Blockchain
    description: |
      The ARK Ecosystem gives you full blockchain functionality via REST APIs available in many programming languages, 
      such as ark-js, ark-java, ark-net, ark-golang, ark-c/c++… (there are more than twelve client API program language implementations).</p>
      <p>The main goal of ARK is to help you deliver new solutions build on top of easy deployable and scalable opensource blockchain ecosystem.
      Ark Push Button-Deployable custom blockchain technology enables users to launch their own chain with a few clicks.
      The new blockchain remains fully ARK-compatible with the API and other service benefits, so you can start using the new ecosystem.
    extraDescription: |
      <a rel='external' href='https://github.com/ArkEcosystem'>REST specifications</a>
      <a rel='external' href='https://ark.brianfaust.me'>Documentation for Node</a>
    documentation: https://github.com/arkecosystem/
    rows: seven half

  - name: Amazon Prime Video App
    description: Building a simple version of a streaming app, see for inspiration the docs link. 
    documentation: https://bitbucket.org/olivif/avworkshop/src

  - name: AWS All technologies
    description: The general AWS services for free.
    documentation: https://aws.amazon.com/

  - name: Amazon Elastic Transcoder
    description: Media Transcoding in the cloud.
    documentation: https://aws.amazon.com/elastictranscoder/

  - name: Amazon Alexa Skills Kit
    description: Allow users to create an Alexa Skill on the cloud.
    documentation: https://aws.amazon.com/alexa/

  - name: Amazon Lambda
    description: Framework to run a function in the cloud.
    documentation: https://aws.amazon.com/lambda/
    rows: two half

  - name: Cisco Spark
    description: Create Cisco Spark integrations and bots to automate experiences. Embed Cisco Spark calling and messaging in your app to drive growth.
    documentation: https://developer.ciscospark.com/
